<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>链表 on qkgoalkeeper&#39;s blog</title>
    <link>https://qkgoalkeeper.github.io/tags/%E9%93%BE%E8%A1%A8/</link>
    <description>Recent content in 链表 on qkgoalkeeper&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 16 Feb 2022 08:55:19 +0800</lastBuildDate><atom:link href="https://qkgoalkeeper.github.io/tags/%E9%93%BE%E8%A1%A8/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode每日练习：剑指 Offer II 021. 删除链表的倒数第 n 个结点</title>
      <link>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0%E5%89%91%E6%8C%87-offer-ii-021.-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC-n-%E4%B8%AA%E7%BB%93%E7%82%B9/</link>
      <pubDate>Wed, 16 Feb 2022 08:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0%E5%89%91%E6%8C%87-offer-ii-021.-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC-n-%E4%B8%AA%E7%BB%93%E7%82%B9/</guid>
      <description>一.剑指 Offer II 021. 删除链表的倒数第 n 个结点 1.题干及思路 给定一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 示例 1： 输入：head = [1,2,3,4,5],</description>
    </item>
    
    <item>
      <title>LeetCode每日一题：148. 排序链表</title>
      <link>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98148.-%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sat, 18 Dec 2021 10:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98148.-%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid>
      <description>一.148. 排序链表 1.题干及思路 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。 进阶： 你可以在 O(n log n) 时间复杂度和常数级空间复杂度下</description>
    </item>
    
    <item>
      <title>LeetCode每日一题：146. LRU 缓存机制</title>
      <link>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98146.-lru-%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 17 Dec 2021 10:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/leetcode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98146.-lru-%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>一.146. LRU 缓存机制 1.题干及思路 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存机制 。 实现 LRUCache 类： LRUCache(int capacity) 以正整数作为容量 capacity 初始化</description>
    </item>
    
  </channel>
</rss>
