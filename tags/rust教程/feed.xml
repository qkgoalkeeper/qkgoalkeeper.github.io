<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust教程 on qkgoalkeeper&#39;s blog</title>
    <link>https://qkgoalkeeper.github.io/tags/rust%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in rust教程 on qkgoalkeeper&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 19 Aug 2022 07:55:19 +0800</lastBuildDate><atom:link href="https://qkgoalkeeper.github.io/tags/rust%E6%95%99%E7%A8%8B/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rust：rust-by-example（1）第1-9章</title>
      <link>https://qkgoalkeeper.github.io/post/rustrust-by-example1%E7%AC%AC1-9%E7%AB%A0/</link>
      <pubDate>Fri, 19 Aug 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustrust-by-example1%E7%AC%AC1-9%E7%AB%A0/</guid>
      <description>一.代码练习 3.自定义类型 3.1 结构体 动手试一试: 增加一个计算 Rectangle （长方形）面积的函数 rect_area（尝试使用嵌套的解构方式）。 增加一个函数 s</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（15）智能指针</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book15%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link>
      <pubDate>Sun, 14 Aug 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book15%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid>
      <description>一.本章任务 指针 （pointer）是一个包含内存地址的变量的通用概念。这个地址引用，或 “指向”（points at）一些其他数据。Rust 中最</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（14）进一步认识 Cargo 和 Crates.io</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book14%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%A4%E8%AF%86-cargo-%E5%92%8C-crates.io/</link>
      <pubDate>Sat, 13 Aug 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book14%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%A4%E8%AF%86-cargo-%E5%92%8C-crates.io/</guid>
      <description>一.本章任务 目前为止我们只使用过 Cargo 构建、运行和测试代码这些最基本的功能，不过它还可以做到更多。本章会讨论 Cargo 其他一些更为高级的功能，我们将展示</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（13）Rust 中的函数式语言功能：迭代器与闭包</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book13rust-%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E5%BC%8F%E8%AF%AD%E8%A8%80%E5%8A%9F%E8%83%BD%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E9%97%AD%E5%8C%85/</link>
      <pubDate>Fri, 12 Aug 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book13rust-%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E5%BC%8F%E8%AF%AD%E8%A8%80%E5%8A%9F%E8%83%BD%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E9%97%AD%E5%8C%85/</guid>
      <description>一.本章任务 Rust 的设计灵感来源于很多现存的语言和技术。其中一个显著的影响就是 函数式编程（functional programming）。函数式编</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（12）一个 IO 项目：构建一个命令行程序</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book12%E4%B8%80%E4%B8%AA-io-%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Mon, 01 Aug 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book12%E4%B8%80%E4%B8%AA-io-%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F/</guid>
      <description>一.本章任务 本章既是一个目前所学的很多技能的概括，也是一个更多标准库功能的探索。我们将构建一个与文件和命令行输入/输出交互的命令行工具来练习</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（11）编写自动化测试</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book11%E7%BC%96%E5%86%99%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sun, 31 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book11%E7%BC%96%E5%86%99%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</guid>
      <description>一.本章任务 程序的正确性意味着代码如我们期望的那样运行。Rust 是一个相当注重正确性的编程语言，不过正确性是一个难以证明的复杂主题。Rust</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（10）泛型、Trait 和生命周期</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book10%E6%B3%9B%E5%9E%8Btrait-%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Sat, 30 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book10%E6%B3%9B%E5%9E%8Btrait-%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>一.本章任务 每一个编程语言都有高效处理重复概念的工具。在 Rust 中其工具之一就是 泛型（generics）。泛型是具体类型或其他属性的抽象替代。我们</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（9）错误处理</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book9%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 28 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book9%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid>
      <description>一.本章任务 错误是软件中不可否认的事实，所以 Rust 有一些处理出错情况的特性。在许多情况下，Rust 要求你承认错误的可能性，并在你的代码编译前采取</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（8）常见集合</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book8%E5%B8%B8%E8%A7%81%E9%9B%86%E5%90%88/</link>
      <pubDate>Mon, 25 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book8%E5%B8%B8%E8%A7%81%E9%9B%86%E5%90%88/</guid>
      <description>一.本章任务 Rust 标准库中包含一系列被称为 集合（collections）的非常有用的数据结构。大部分其他数据类型都代表一个特定的值，不过集合可以</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（7）使用包、Crate 和模块管理不断增长的项目</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book7%E4%BD%BF%E7%94%A8%E5%8C%85crate-%E5%92%8C%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E4%B8%8D%E6%96%AD%E5%A2%9E%E9%95%BF%E7%9A%84%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Sun, 24 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book7%E4%BD%BF%E7%94%A8%E5%8C%85crate-%E5%92%8C%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E4%B8%8D%E6%96%AD%E5%A2%9E%E9%95%BF%E7%9A%84%E9%A1%B9%E7%9B%AE/</guid>
      <description>一.本章任务 到目前为止，我们编写的程序都在一个文件的一个模块中。伴随着项目的增长，你可以通过将代码分解为多个模块和多个文件来组织代码。一个包</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（6）枚举和模式匹配</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book6%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Tue, 19 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book6%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>一.本章任务 本章介绍 枚举（enumerations），也被称作 enums。枚举允许你通过列举可能的 成员（variants） 来定义一个类型。首</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（5） 使用结构体来组织相关联的数据</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book5-%E4%BD%BF%E7%94%A8%E7%BB%93%E6%9E%84%E4%BD%93%E6%9D%A5%E7%BB%84%E7%BB%87%E7%9B%B8%E5%85%B3%E8%81%94%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 18 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book5-%E4%BD%BF%E7%94%A8%E7%BB%93%E6%9E%84%E4%BD%93%E6%9D%A5%E7%BB%84%E7%BB%87%E7%9B%B8%E5%85%B3%E8%81%94%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>一.本章任务 struct，或者 structure，是一个自定义数据类型，允许你包装和命名多个相关的值，从而形成一个有意义的组合。如果你熟悉一</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（4）认识所有权</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book4%E8%AE%A4%E8%AF%86%E6%89%80%E6%9C%89%E6%9D%83/</link>
      <pubDate>Sun, 17 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book4%E8%AE%A4%E8%AF%86%E6%89%80%E6%9C%89%E6%9D%83/</guid>
      <description>一.本章任务 所有权（系统）是 Rust 最为与众不同的特性，对语言的其他部分有着深刻含义。它让 Rust 无需垃圾回收（garbage collector）即可保</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（3）常见编程概念</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book3%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sat, 16 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book3%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/</guid>
      <description>一.本章任务 本章介绍一些几乎所有编程语言都有的概念，以及它们在 Rust 中是如何工作的。很多编程语言的核心概念都是共通的，本章中展示的概念都不是 Rust 所</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（2）写个猜数字游戏</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book2%E5%86%99%E4%B8%AA%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Thu, 14 Jul 2022 08:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book2%E5%86%99%E4%B8%AA%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F/</guid>
      <description>一.本章任务 让我们一起动手完成一个项目，来快速上手 Rust！本章将介绍 Rust 中一些常用概念，并通过真实的程序来展示如何运用它们。你将会学到 let</description>
    </item>
    
    <item>
      <title>rust：the_rust_book（1）入门指南</title>
      <link>https://qkgoalkeeper.github.io/post/rustthe_rust_book1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 14 Jul 2022 07:55:19 +0800</pubDate>
      
      <guid>https://qkgoalkeeper.github.io/post/rustthe_rust_book1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>一.本章任务 在 Linux、macOS 和 Windows 上安装 Rust 编写一个打印 Hello, world! 的程序 使用 Rust 的包管理器和构建系统 cargo 二.在 Linux、macOS 和 Windows 上安装 Rust 这</description>
    </item>
    
  </channel>
</rss>
